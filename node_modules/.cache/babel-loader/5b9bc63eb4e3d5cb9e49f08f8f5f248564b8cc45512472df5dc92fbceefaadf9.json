{"ast":null,"code":"var _jsxFileName = \"/Users/yogesh/webapps/healthcheck/src/Donut1.js\";\nimport React, { PureComponent } from 'react';\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  name: 'Group A',\n  value: 400\n}, {\n  name: 'Group B',\n  value: 300\n}, {\n  name: 'Group C',\n  value: 300\n}, {\n  name: 'Group D',\n  value: 200\n}];\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = _ref => {\n  let {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent,\n    index\n  } = _ref;\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  return /*#__PURE__*/_jsxDEV(\"text\", {\n    x: x,\n    y: y,\n    fill: \"white\",\n    textAnchor: x > cx ? 'start' : 'end',\n    dominantBaseline: \"central\",\n    children: `${(percent * 100).toFixed(0)}%`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\nconst Example = () => {\n  //   static demoUrl = 'https://codesandbox.io/s/pie-chart-with-customized-label-dlhhj';\n\n  return /*#__PURE__*/_jsxDEV(PieChart, {\n    width: 400,\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(Pie, {\n      data: data,\n      cx: \"50%\",\n      cy: \"50%\",\n      labelLine: false,\n      label: renderCustomizedLabel,\n      outerRadius: 80,\n      fill: \"#8884d8\",\n      dataKey: \"value\",\n      children: data.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n        fill: COLORS[index % COLORS.length]\n      }, `cell-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c = Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["React","PureComponent","PieChart","Pie","Sector","Cell","ResponsiveContainer","data","name","value","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","index","radius","x","cos","y","sin","toFixed","Example","map","entry","length"],"sources":["/Users/yogesh/webapps/healthcheck/src/Donut1.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\n\nconst data = [\n  { name: 'Group A', value: 400 },\n  { name: 'Group B', value: 300 },\n  { name: 'Group C', value: 300 },\n  { name: 'Group D', value: 200 },\n];\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nconst Example = () => {\n//   static demoUrl = 'https://codesandbox.io/s/pie-chart-with-customized-label-dlhhj';\n\n    return (\n        <PieChart width={400} height={400}>\n          <Pie\n            data={data}\n            cx=\"50%\"\n            cy=\"50%\"\n            labelLine={false}\n            label={renderCustomizedLabel}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n          >\n            {data.map((entry, index) => (\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n            ))}\n          </Pie>\n        </PieChart>\n    );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,QAAQ,OAAO;AAC5C,SAASC,QAAQ,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,mBAAmB,QAAQ,UAAU;AAAC;AAE5E,MAAMC,IAAI,GAAG,CACX;EAAEC,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAI,CAAC,EAC/B;EAAED,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAI,CAAC,EAC/B;EAAED,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAI,CAAC,EAC/B;EAAED,IAAI,EAAE,SAAS;EAAEC,KAAK,EAAE;AAAI,CAAC,CAChC;AAED,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAE3D,MAAMC,MAAM,GAAGC,IAAI,CAACC,EAAE,GAAG,GAAG;AAC5B,MAAMC,qBAAqB,GAAG,QAAoE;EAAA,IAAnE;IAAEC,EAAE;IAAEC,EAAE;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,WAAW;IAAEC,OAAO;IAAEC;EAAM,CAAC;EAC3F,MAAMC,MAAM,GAAGJ,WAAW,GAAG,CAACC,WAAW,GAAGD,WAAW,IAAI,GAAG;EAC9D,MAAMK,CAAC,GAAGR,EAAE,GAAGO,MAAM,GAAGV,IAAI,CAACY,GAAG,CAAC,CAACP,QAAQ,GAAGN,MAAM,CAAC;EACpD,MAAMc,CAAC,GAAGT,EAAE,GAAGM,MAAM,GAAGV,IAAI,CAACc,GAAG,CAAC,CAACT,QAAQ,GAAGN,MAAM,CAAC;EAEpD,oBACE;IAAM,CAAC,EAAEY,CAAE;IAAC,CAAC,EAAEE,CAAE;IAAC,IAAI,EAAC,OAAO;IAAC,UAAU,EAAEF,CAAC,GAAGR,EAAE,GAAG,OAAO,GAAG,KAAM;IAAC,gBAAgB,EAAC,SAAS;IAAA,UAC3F,GAAE,CAACK,OAAO,GAAG,GAAG,EAAEO,OAAO,CAAC,CAAC,CAAE;EAAE;IAAA;IAAA;IAAA;EAAA,QAC5B;AAEX,CAAC;AAED,MAAMC,OAAO,GAAG,MAAM;EACtB;;EAEI,oBACI,QAAC,QAAQ;IAAC,KAAK,EAAE,GAAI;IAAC,MAAM,EAAE,GAAI;IAAA,uBAChC,QAAC,GAAG;MACF,IAAI,EAAErB,IAAK;MACX,EAAE,EAAC,KAAK;MACR,EAAE,EAAC,KAAK;MACR,SAAS,EAAE,KAAM;MACjB,KAAK,EAAEO,qBAAsB;MAC7B,WAAW,EAAE,EAAG;MAChB,IAAI,EAAC,SAAS;MACd,OAAO,EAAC,OAAO;MAAA,UAEdP,IAAI,CAACsB,GAAG,CAAC,CAACC,KAAK,EAAET,KAAK,kBACrB,QAAC,IAAI;QAAuB,IAAI,EAAEX,MAAM,CAACW,KAAK,GAAGX,MAAM,CAACqB,MAAM;MAAE,GAApD,QAAOV,KAAM,EAAC;QAAA;QAAA;QAAA;MAAA,QAC3B;IAAC;MAAA;MAAA;MAAA;IAAA;EACE;IAAA;IAAA;IAAA;EAAA,QACG;AAEnB,CAAC;AAAA,KArBKO,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}